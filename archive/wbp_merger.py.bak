#!/usr/bin/python
import os
from operator import itemgetter
from math import isnan

wbp_files = []
wbpm_files = []
old_dir = os.path.dirname(os.path.realpath(__file__))
skipped_params = 0
skipped_metas = 0

def isDesirable(utility):
	if isnan(float(utility)):
		return False
	if float(utility) > 915.0:
		return False
	return True

for (dpath, dnames, fnames) in os.walk(old_dir):
	if (old_dir.__eq__(dpath)):
		for fname in fnames:
			if fname[:21].__eq__("worm_body_params_meta"):
				#print "nice!: "+fname
				wbpm_files.append(fname)
			elif fname[:17].__eq__("worm_body_params_"):
				#print "good.: "+fname
				wbp_files.append(fname)
	else:
		break

# this will make sure they're aligned
wbpm_files.sort()
wbp_files.sort()

num_files = len(wbp_files)

if num_files != len(wbpm_files):
	print "Please reconsider your most recent actions prior to repeating them."
	exit()

merged_params = []
merged_metas = []
last_param_num = 0 # start at 1
total_entries = 0

for i in range(0, num_files):
    print wbp_files[i],"/", wbpm_files[i]
    params = open(wbp_files[i],'r')
    metas_f = open(wbpm_files[i],'r')
    metas = metas_f.readlines()
    new_ids = {} 
    num_entries = 0
    for param in params:
	    sparams = param.split(',')
	    if (not isDesirable(sparams[1])):
		    skipped_params += 1
		    continue
	    last_param_num += 1
	    new_ids[sparams[0]] = last_param_num
	    sparams[0] = str(last_param_num)
	    merged_params.append(sparams)
	    num_entries += 1
    if (num_entries < 1):
	    continue
    total_entries += num_entries
    max_range = num_entries + 1 + skipped_params
    skipped_params = 0
    id_index = 0
    #print "max range meta: ",max_range,"len metas: ",len(metas)
	for j in range(1, max_range): # NOTE: remember the first line is a count
	    #if (len(metas[j]) == 0):
	    #	continue
	    #print j,metas[j]
        meta = metas[j].split(',')
	    if (not isDesirable(meta[1][:-1])):
		    skipped_metas += 1
		    continue
	    meta[0] = new_ids[str(int(round(float(meta[0]))))]
	    id_index += 1
	    meta[1] = float(meta[1][:-1])
	    merged_metas.append(meta)
    params.close()
    metas_f.close()


merged_metas.sort(key=itemgetter(1)) #,reverse = True)
merged_params.sort(key=itemgetter(1))

#for mp in merged_params:
	#print mp[0],mp[1]
#print "********"
#print merged_metas

if total_entries != len(merged_metas) != len(merged_params):
	print "It was probably the machine's fault...\nRight."
	print "skipped_params, skipped_metas => ",skipped_params, skipped_metas
	exit()	
		
new_param_f = open("merged_wbp.txt",'w')
new_param_meta_f = open("merged_wbp_meta.txt",'w')

new_param_meta_f.write(str(total_entries)+"\n")

for i in range(0, total_entries):
	util = str(merged_metas[i][1])
	#if (util.__eq__('nan')):
	#	continue
	new_param_f.write(str(",".join(merged_params[i][:-1])).strip()+"\n")
	new_param_meta_f.write(str(merged_metas[i][0])+","+str(merged_metas[i][1])+"\n")
	
new_param_f.close()
new_param_meta_f.close()
